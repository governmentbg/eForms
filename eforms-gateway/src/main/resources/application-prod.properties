##
# Service Configuration
##
server.port=8003
server.tomcat.max-threads=4096

##
# Logging
##
logging.level.org.springframework: ${LOG_LEVEL:DEBUG}

##
# Memcached configuration
##
memcached.cache.servers: ${MEMCACHED_SERVER:localhost:11211}
memcached.cache.provider: static
memcached.cache.expiration: 1h
spring.cache.cache-names: getServiceAssuranceLevelCache
memcached.cache.expiration-per-cache.getServiceAssuranceLevelCache:1d
active-caches=${ACTIVE_CACHES:getUserAdministrationsAuthorizationCache, getUserProfileCache, getLegalPersonRegistrationResponseCache, getPersonRegistrationResponseCache, getSubjectRegistrationCache, getServicesByIdCache, getServiceSuppliersByTitleCache, getServiceAssuranceLevelCache, getServiceSupplierByEik, getSupplierWithAdminUnitsByCodeCache, getUserProfileDataCache, getUserProfilesByNameCache, getProcessInstanceByBusinessKeyCache, getBusinessKeyByProcessInstanceCache, getTaskByIdCache, getAllTasksByAssigneeCache, getAllTasksByProcessInstanceIdCache, getAllHistoryTasksByProcessInstanceIdCache}

##
# KeyCloak Security Configuration
##
keycloak.url.auth: ${KEYCLOAK_URL_AUTH}
keycloak.url.token: ${KEYCLOAK_URL_TOKEN}
keycloak.url.plugin: ${KEYCLOAK_URL_PLUGIN}
keycloak.client.id: ${KEYCLOAK_CLIENT_ID}
keycloak.client.secret: ${KEYCLOAK_CLIENT_SECRET}
keycloak.realm.name: ${KEYCLOAK_REALM}
keycloak.user.id.property: ${KEYCLOAK_USER_ID_PROPERTY:personIdentifier}
keycloak.administration.user.group.property: ${KEYCLOAK_ADMINISTRATION_USER_GROUP_PROPERTY:/administration}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.url.auth}/auth/realms/${keycloak.realm.name}

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.client.id}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.client.secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri="{baseUrl}/{action}/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email

spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.url.auth}/auth/realms/${KEYCLOAK_REALM}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.url.auth}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak.url.auth}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.url.token}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak.url.token}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub

##
# Web Configuration
##
com.bulpros.integrations.url=${INTEGRATIONS_URL}
com.bulpros.signature.url=${SIGNATURE_URL}
com.bulpros.process-engine.engine.url=${PROCESS_ENGINE_URL}

##
# formio client
#
#TODO: Think for multy-tenancy support
com.bulpros.formio.url=${FORMIO_URI}
com.bulpros.formio.pdf.url=${FORMIO_PDF_API_PATH}
com.bulpros.formio.userprofile.project.id=${USER_PROFILE_PROJECT_ID}
com.bulpros.formio.userprofile.form.id=${USER_PROFILE_FORM_ID}
com.bulpros.formio.jwt.secret=${JWT_FORMIO_SECRET}
com.bulpros.process-admin.group =${PROCESS_ADMIN_GROUP}

#Min.io configuration
com.bulpros.minio.url=${MINIO_URL}
com.bulpros.minio.accessKey=${MINIO_ACCESSKEY}
com.bulpros.minio.password=${MINIO_PASSWORD}

#EGOV profileId AES-GCM secret key
com.bulpros.egov.profileId.secret-key=${PROFILE_ID_SECRET_KEY}


##
# Gateway Configuration
##
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

spring.cloud.gateway.routes[0].id=authentication_admin_route
spring.cloud.gateway.routes[0].uri=no://op
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/admin/**
spring.cloud.gateway.routes[0].filters[0]=SetStatus=403

spring.cloud.gateway.routes[1].id=authentication_route
spring.cloud.gateway.routes[1].uri=${KEYCLOAK_URL_AUTH}
spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/**

spring.cloud.gateway.routes[2].id=forbidden_resources_route
spring.cloud.gateway.routes[2].uri=no://op
spring.cloud.gateway.routes[2].predicates[0]=Method=GET
spring.cloud.gateway.routes[2].predicates[1]=Path=${FORBIDDEN_RESOURCES}
spring.cloud.gateway.routes[2].filters[0]=SetStatus=403

spring.cloud.gateway.routes[3].id=userprofile_route
spring.cloud.gateway.routes[3].uri=forward:///
spring.cloud.gateway.routes[3].predicates[0]=Method=GET
spring.cloud.gateway.routes[3].predicates[1]=Path=${USER_PROFILE_PATH}
spring.cloud.gateway.routes[3].filters[0]=SetPath=/api/projects/{projectPath}/user-profile

spring.cloud.gateway.routes[4].id=forms_by_id_route
spring.cloud.gateway.routes[4].uri=${FORMIO_URI}
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/project/{projectPath}/form/{formId}
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/project(?<projectPath>/?.*)/form(?<formId>/?.*), /project/${projectPath}/form/${formId}

spring.cloud.gateway.routes[5].id=submissions_route
spring.cloud.gateway.routes[5].uri=${FORMIO_URI}
spring.cloud.gateway.routes[5].predicates[0]=Method=GET
spring.cloud.gateway.routes[5].predicates[1]=Path=/api/project/{projectId}/{*resourcePath},/api/projects/{projectId}/{*resourcePath}
spring.cloud.gateway.routes[5].filters[0]=SubmissionRequest
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/api/project[s]?(?<projectPath>/?.*), /project/${projectPath}

spring.cloud.gateway.routes[6].id=admin_submissions_route
spring.cloud.gateway.routes[6].uri=${FORMIO_URI}
spring.cloud.gateway.routes[6].predicates[0]=Method=GET
spring.cloud.gateway.routes[6].predicates[1]=Path=/api/admin/project/{projectId}/{*resourcePath},/api/admin/projects/{projectId}/{*resourcePath}
spring.cloud.gateway.routes[6].filters[0]=AdminSubmissionRequest
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/api/admin/project[s]?(?<projectPath>/?.*), /project/${projectPath}

spring.cloud.gateway.routes[7].id=process_map_route
spring.cloud.gateway.routes[7].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/admin/processes/{processInstanceId}/map,/api/processes/{processInstanceId}/map
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/api(?<admin>/?.*)/processes(?<processInstanceId>/?.*)/map, /eforms-rest/${admin}/process-definition/${processInstanceId}/map

spring.cloud.gateway.routes[8].id=task_claim_unclaim_route
spring.cloud.gateway.routes[8].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/admin/tasks/{taskId}/claim,/api/admin/tasks/{taskId}/unclaim
spring.cloud.gateway.routes[8].filters[0]=ClaimTaskRequest
spring.cloud.gateway.routes[8].filters[1]=RewritePath=/api/admin/tasks(?<taskId>/[^/]*)(?<taskAction>/?.*), /engine-rest/task/${taskId}/${taskAction}

spring.cloud.gateway.routes[9].id=task_complete_route
spring.cloud.gateway.routes[9].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/tasks/{taskId}/complete
spring.cloud.gateway.routes[9].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[9].filters[1]=RewritePath=/api/tasks(?<taskId>/[^/]*)(?<taskAction>/?.*), /eforms-rest/task/${taskId}/${taskAction}

spring.cloud.gateway.routes[10].id=task_get_variables_route
spring.cloud.gateway.routes[10].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[10].predicates[0]=Method=GET
spring.cloud.gateway.routes[10].predicates[1]=Path=/api/tasks/{taskId}/localVariables/{varName}
spring.cloud.gateway.routes[10].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[10].filters[1]=RewritePath=/api/tasks(?<taskId>/?.*)/localVariables/(?<varName>/?.*), /engine-rest/task/${taskId}/localVariables/${varName}

spring.cloud.gateway.routes[11].id=task_set_variables_route
spring.cloud.gateway.routes[11].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[11].predicates[0]=Method=POST
spring.cloud.gateway.routes[11].predicates[1]=Path=/api/tasks/{taskId}/localVariables
spring.cloud.gateway.routes[11].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[11].filters[1]=RewritePath=/api/tasks(?<taskId>/?.*)/localVariables, /engine-rest/task/${taskId}/localVariables

spring.cloud.gateway.routes[12].id=integrations_regix_route
spring.cloud.gateway.routes[12].uri=${INTEGRATIONS_URL}
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/regix/**
spring.cloud.gateway.routes[12].filters[0]=ModifyRegixRequest
spring.cloud.gateway.routes[12].filters[1]=RewritePath=/api/regix(?<regixPath>/?.*), /integrations/regix/${regixPath}

spring.cloud.gateway.routes[13].id=integrations_eDelivery_route
spring.cloud.gateway.routes[13].uri=${INTEGRATIONS_URL}
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/eDelivery/**
spring.cloud.gateway.routes[13].filters[0]=RewritePath=/api/eDelivery(?<eDeliveryPath>/?.*), /integrations/eDelivery/${eDeliveryPath}

spring.cloud.gateway.routes[14].id=integrations_orn_route
spring.cloud.gateway.routes[14].uri=${INTEGRATIONS_URL}
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/orn/**
spring.cloud.gateway.routes[14].filters[0]=RewritePath=/api/orn(?<ornPath>/?.*), /integrations/orn/${ornPath}

spring.cloud.gateway.routes[15].id=signature_route
spring.cloud.gateway.routes[15].uri=${SIGNATURE_URL}
spring.cloud.gateway.routes[15].predicates[0]=Path=/api/signature/**
spring.cloud.gateway.routes[15].filters[0]=RewritePath=/api/signature(?<signaturePath>/?.*), /api/signature/${signaturePath}

spring.cloud.gateway.routes[16].id=currentTask_by_processId
spring.cloud.gateway.routes[16].uri=${PROCESS_ENGINE_URL}
spring.cloud.gateway.routes[16].predicates[0]=Path=/api/process/{processId}/current-task
spring.cloud.gateway.routes[16].filters[0]=RewritePath=/api/process(?<processId>/?.*)/current-task, /eforms-rest/process/${processId}/current-task

spring.cloud.gateway.routes[17].id=integrations_borica_route
spring.cloud.gateway.routes[17].uri=${INTEGRATIONS_URL}
spring.cloud.gateway.routes[17].predicates[0]=Path=/api/borica/**
spring.cloud.gateway.routes[17].filters[0]=RewritePath=/api/borica(?<boricaPath>/?.*), /integrations/borica/${boricaPath}

spring.cloud.gateway.routes[18].id=integrations_evrotrust_route
spring.cloud.gateway.routes[18].uri=${INTEGRATIONS_URL}
spring.cloud.gateway.routes[18].predicates[0]=Path=/api/evrotrust/**
spring.cloud.gateway.routes[18].filters[0]=RewritePath=/api/evrotrust(?<evrotrustPath>/?.*), /integrations/evrotrust/${evrotrustPath}
