##
# Service Configuration
##
server.port=8003
server.tomcat.threads.max=4096

# enable health endpoint
management.endpoints.jmx.exposure.include=health

##
# Logging
##
logging.level.org.springframework=DEBUG
logging.level.org.springframework.cache=TRACE

##
# Memcached configuration
##
memcached.cache.servers=${MEMCACHED_SERVER:localhost:11211}
memcached.cache.provider=static
memcached.cache.expiration=1h
spring.cache.cache-names=getServiceAssuranceLevelCache
memcached.cache.expiration-per-cache.getServiceAssuranceLevelCache=1d
active-caches=${ACTIVE_CACHES:getLanguageTranslationsByIsoCodeAndStatusCache, getServiceSupplierMetadata, getServiceSupplierWithChannelTermsAndTaxes, getUserAdministrationsAuthorizationCache, getUserProfileCache, getLegalPersonRegistrationResponseCache, getPersonRegistrationResponseCache, getSubjectRegistrationCache, getServicesByIdCache, getServiceSuppliersByTitleCache, getServiceAssuranceLevelCache, getServiceSupplierByEik, getSupplierWithAdminUnitsByCodeCache, getUserProfileDataCache, getUserProfilesByNameCache, getBusinessKeyByProcessInstanceCache, getTaskByIdCache, getAllTasksByAssigneeCache, getAllTasksByProcessInstanceIdCache, getAllHistoryTasksByProcessInstanceIdCache, getDefinitionRequestCache, getCaseStatusesByClassifier, getCaseStatusesCache}

##
# KeyCloak Security Configuration
##
keycloak.url.auth=${KEYCLOAK_URL_AUTH:http://10.191.35.200:9090}
keycloak.url.token=${KEYCLOAK_URL_TOKEN:http://10.191.35.200:9090}
keycloak.url.plugin=${KEYCLOAK_URL_PLUGIN:http://10.191.35.200:9090}
keycloak.client.id=${KEYCLOAK_CLIENT_ID:eforms-gateway}
keycloak.client.secret=${KEYCLOAK_CLIENT_SECRET:0de00ecf-3e61-4177-93f9-150942a731cc}
keycloak.realm.name=${KEYCLOAK_REALM:eforms}
keycloak.user.id.property=${KEYCLOAK_USER_ID_PROPERTY:personIdentifier}
keycloak.administration.user.group.property=${KEYCLOAK_ADMINISTRATION_USER_GROUP_PROPERTY:/administration}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.url.auth}/auth/realms/${keycloak.realm.name}

spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.client.id}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.client.secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri="{baseUrl}/{action}/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email

spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.url.auth}/auth/realms/${keycloak.realm.name}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.url.auth}/auth/realms/${keycloak.realm.name}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak.url.auth}/auth/realms/${keycloak.realm.name}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.url.token}/auth/realms/${keycloak.realm.name}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak.url.token}/auth/realms/${keycloak.realm.name}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=sub

##
# Web Configuration
##
com.bulpros.integrations.url=${INTEGRATIONS_URL:http://localhost:8002}
com.bulpros.signature.url=${SIGNATURE_URL:http://localhost:8004}
com.bulpros.process-engine.engine.url=${PROCESS_ENGINE_URL:http://localhost:8001}
com.bulpros.gateway.url=${GATEWAY_BASE_URL:http://localhost:8003}

##
# formio client
#
com.bulpros.formio.url=${FORMIO_API_PATH:http://10.191.35.200:3000}
com.bulpros.formio.pdf.url=${FORMIO_PDF_API_PATH:http://10.191.35.200:4005}
com.bulpros.formio.userprofile.project.id=${USER_PROFILE_PROJECT_ID:60929223b1258f297e4bb85b}
com.bulpros.formio.userprofile.form.id=${USER_PROFILE_FORM_ID:60929223b1258f297e4bb85b}
com.bulpros.formio.jwt.secret=${JWT_FORMIO_SECRET:SNGP3c&?4*)7*[g4tlhb40dK7gru?YK=3=3TN3IYYlm(@Zb&}
com.bulpros.process-admin.group=${PROCESS_ADMIN_GROUP:6130b67968502a865d26da03}

#Min.io configuration
com.bulpros.minio.url=${MINIO_URL:http://10.191.35.200:9000}
com.bulpros.minio.accessKey=${MINIO_ACCESSKEY:RootUser}
com.bulpros.minio.password=${MINIO_PASSWORD:ExtraordinaryPass}

##
# ETranslation Configuration
##
com.bulpros.etranslation.requesterCallback=${com.bulpros.gateway.url}/api/public/translation/receive-translation/
com.bulpros.etranslation.errorCallback=${com.bulpros.gateway.url}/api/public/translation/receive-error/
com.bulpros.etranslation.default.language.code=BG

#EGOV profileId AES-GCM secret key
com.bulpros.egov.profileId.secret-key=${PROFILE_ID_SECRET_KEY:3izgR+Akh4m6/lZbMroJm8xJrOwQLGbw5oivVxyZM0g=}

#Service Status Configuration
com.bulpros.start.service.statuses=${SERVICE_STATUSES: developed, validated, approved, published }

#Supplier Status Configuration
com.bulpros.service.supplier.statuses=${SERVICE_WITH_SUPPLIER_STATUSES: active, published }

##
# Gateway Configuration
##
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

spring.cloud.gateway.routes[0].id=authentication_admin_route
spring.cloud.gateway.routes[0].uri=no://op
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/admin/**
spring.cloud.gateway.routes[0].filters[0]=SetStatus=403

spring.cloud.gateway.routes[1].id=authentication_route
spring.cloud.gateway.routes[1].uri=http://10.191.35.200:9090/
spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/**

spring.cloud.gateway.routes[2].id=forbidden_resources_route
spring.cloud.gateway.routes[2].uri=no://op
spring.cloud.gateway.routes[2].predicates[0]=Method=GET
spring.cloud.gateway.routes[2].predicates[1]=Path=${FORBIDDEN_RESOURCES:\
  /api/project/{projectPath}/common/resource/additional-profile/**, \
  /api/project/{projectPath}/resource/6128e4d668502a67db1869be/**, \
  /api/project/{projectPath}/common/resource/term-taxes, \
  /api/project/{projectPath}/resource/611d0305f3b7c03834c64fd0, \
  /api/project/{projectPath}/common/resource/payment-request/**, \
  /api/project/{projectPath}/resource/60e02ef620f5107bd7747f11/**}
spring.cloud.gateway.routes[2].filters[0]=SetStatus=403

spring.cloud.gateway.routes[3].id=userprofile_route
spring.cloud.gateway.routes[3].uri=forward:///
spring.cloud.gateway.routes[3].predicates[0]=Method=GET
spring.cloud.gateway.routes[3].predicates[1]=Path=${USER_PROFILE_PATH:\
  /api/project/{projectPath}/common/resource/userprofile/**, \
  /api/project/{projectPath}/resource/609cf392b1258f34a24beb87/**}
spring.cloud.gateway.routes[3].filters[0]=SetPath=/api/projects/{projectPath}/user-profile

spring.cloud.gateway.routes[4].id=forms_by_id_route
spring.cloud.gateway.routes[4].uri=http://10.191.35.200:3000/
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/project/{projectPath}/form/{formId}
spring.cloud.gateway.routes[4].filters[0]=DefinitionRequest
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/api/project(?<projectPath>/?.*)/form(?<formId>/?.*), /project/${projectPath}/form/${formId}

spring.cloud.gateway.routes[5].id=submissions_route
spring.cloud.gateway.routes[5].uri=http://10.191.35.200:3000/
spring.cloud.gateway.routes[5].predicates[0]=Method=GET
spring.cloud.gateway.routes[5].predicates[1]=Path=/api/project/{projectId}/{*resourcePath},/api/projects/{projectId}/{*resourcePath}
spring.cloud.gateway.routes[5].filters[0]=DefinitionRequest
spring.cloud.gateway.routes[5].filters[1]=SubmissionRequest
spring.cloud.gateway.routes[5].filters[2]=RewritePath=/api/project[s]?(?<projectPath>/?.*), /project/${projectPath}

spring.cloud.gateway.routes[6].id=admin_submissions_route
spring.cloud.gateway.routes[6].uri=http://10.191.35.200:3000/
spring.cloud.gateway.routes[6].predicates[0]=Method=GET
spring.cloud.gateway.routes[6].predicates[1]=Path=/api/admin/project/{projectId}/{*resourcePath},/api/admin/projects/{projectId}/{*resourcePath}
spring.cloud.gateway.routes[6].filters[0]=DefinitionRequest
spring.cloud.gateway.routes[6].filters[1]=AdminSubmissionRequest
spring.cloud.gateway.routes[6].filters[2]=RewritePath=/api/admin/project[s]?(?<projectPath>/?.*), /project/${projectPath}

spring.cloud.gateway.routes[7].id=process_map_route
spring.cloud.gateway.routes[7].uri=http://localhost:8001/
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/admin/processes/{processInstanceId}/map,/api/processes/{processInstanceId}/map
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/api(?<admin>/?.*)/processes(?<processInstanceId>/?.*)/map, /eforms-rest/${admin}/process-definition/${processInstanceId}/map

spring.cloud.gateway.routes[8].id=task_claim_unclaim_route
spring.cloud.gateway.routes[8].uri=http://localhost:8001/
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/admin/tasks/{taskId}/claim,/api/admin/tasks/{taskId}/unclaim
spring.cloud.gateway.routes[8].filters[0]=ClaimTaskRequest
spring.cloud.gateway.routes[8].filters[1]=RewritePath=/api/admin/tasks(?<taskId>/[^/]*)(?<taskAction>/?.*), /engine-rest/task/${taskId}/${taskAction}

spring.cloud.gateway.routes[9].id=task_complete_route
spring.cloud.gateway.routes[9].uri=http://localhost:8001/
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/tasks/{taskId}/complete
spring.cloud.gateway.routes[9].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[9].filters[1]=RewritePath=/api/tasks(?<taskId>/[^/]*)(?<taskAction>/?.*), /eforms-rest/task/${taskId}/${taskAction}

spring.cloud.gateway.routes[10].id=task_get_variables_route
spring.cloud.gateway.routes[10].uri=http://localhost:8001/
spring.cloud.gateway.routes[10].predicates[0]=Method=GET
spring.cloud.gateway.routes[10].predicates[1]=Path=/api/tasks/{taskId}/localVariables/{varName}
spring.cloud.gateway.routes[10].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[10].filters[1]=RewritePath=/api/tasks(?<taskId>/?.*)/localVariables/(?<varName>/?.*), /engine-rest/task/${taskId}/localVariables/${varName}

spring.cloud.gateway.routes[11].id=task_set_variables_route
spring.cloud.gateway.routes[11].uri=http://localhost:8001/
spring.cloud.gateway.routes[11].predicates[0]=Method=POST
spring.cloud.gateway.routes[11].predicates[1]=Path=/api/tasks/{taskId}/localVariables
spring.cloud.gateway.routes[11].filters[0]=CompleteTaskRequest
spring.cloud.gateway.routes[11].filters[1]=RewritePath=/api/tasks(?<taskId>/?.*)/localVariables, /engine-rest/task/${taskId}/localVariables

spring.cloud.gateway.routes[12].id=integrations_regix_route
spring.cloud.gateway.routes[12].uri=http://localhost:8002/
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/regix/search
spring.cloud.gateway.routes[12].filters[0]=RegixRequest
spring.cloud.gateway.routes[12].filters[1]=RewritePath=/api/regix/search, /integrations/regix/search

spring.cloud.gateway.routes[13].id=integrations_regix_route
spring.cloud.gateway.routes[13].uri=http://localhost:8002/
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/regix/**
spring.cloud.gateway.routes[13].filters[0]=ModifyRegixRequest
spring.cloud.gateway.routes[13].filters[1]=RewritePath=/api/regix(?<regixPath>/?.*), /integrations/regix/${regixPath}

spring.cloud.gateway.routes[14].id=integrations_eDelivery_route
spring.cloud.gateway.routes[14].uri=http://localhost:8002/
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/eDelivery/**
spring.cloud.gateway.routes[14].filters[0]=RewritePath=/api/eDelivery(?<eDeliveryPath>/?.*), /integrations/eDelivery/${eDeliveryPath}

spring.cloud.gateway.routes[15].id=integrations_orn_route
spring.cloud.gateway.routes[15].uri=http://localhost:8002/
spring.cloud.gateway.routes[15].predicates[0]=Path=/api/orn/**
spring.cloud.gateway.routes[15].filters[0]=RewritePath=/api/orn(?<ornPath>/?.*), /integrations/orn/${ornPath}

spring.cloud.gateway.routes[16].id=signature_route
spring.cloud.gateway.routes[16].uri=http://localhost:8004
spring.cloud.gateway.routes[16].predicates[0]=Path=/api/signature/**
spring.cloud.gateway.routes[16].filters[0]=RewritePath=/api/signature(?<signaturePath>/?.*), /api/signature/${signaturePath}

spring.cloud.gateway.routes[17].id=currentTask_by_processId
spring.cloud.gateway.routes[17].uri=http://localhost:8001/
spring.cloud.gateway.routes[17].predicates[0]=Path=/api/process/{processId}/current-task
spring.cloud.gateway.routes[17].filters[0]=RewritePath=/api/process(?<processId>/?.*)/current-task, /eforms-rest/process/${processId}/current-task

spring.cloud.gateway.routes[18].id=integrations_borica_route
spring.cloud.gateway.routes[18].uri=http://localhost:8002/
spring.cloud.gateway.routes[18].predicates[0]=Path=/api/borica/**
spring.cloud.gateway.routes[18].filters[0]=RewritePath=/api/borica(?<boricaPath>/?.*), /integrations/borica/${boricaPath}

spring.cloud.gateway.routes[19].id=integrations_evrotrust_route
spring.cloud.gateway.routes[19].uri=http://localhost:8002/
spring.cloud.gateway.routes[19].predicates[0]=Path=/api/evrotrust/**
spring.cloud.gateway.routes[19].filters[0]=RewritePath=/api/evrotrust(?<evrotrustPath>/?.*), /integrations/evrotrust/${evrotrustPath}

spring.cloud.gateway.routes[20].id=integrations_ePayment_route
spring.cloud.gateway.routes[20].uri=http://localhost:8002/
spring.cloud.gateway.routes[20].predicates[0]=Path=/api/ePayment/get-clients-by-eik
spring.cloud.gateway.routes[20].filters[0]=RewritePath=/api/ePayment/get-clients-by-eik, /integrations/ePayment/get-clients-by-eik

spring.cloud.gateway.routes[21].id=integrations_ePayment_pos_borica_route
spring.cloud.gateway.routes[21].uri=http://localhost:8002/
spring.cloud.gateway.routes[21].predicates[0]=Path=/api/ePayment/vpos/pay-with-borica
spring.cloud.gateway.routes[21].filters[0]=RewritePath=/api/ePayment/vpos/pay-with-borica, /integrations/ePayment/vpos/pay-with-borica

spring.cloud.gateway.routes[22].id=integrations_ePayment_status_route
spring.cloud.gateway.routes[22].uri=http://localhost:8002/
spring.cloud.gateway.routes[22].predicates[0]=Path=/api/ePayment/payment-status
spring.cloud.gateway.routes[22].filters[0]=RewritePath=/api/ePayment/payment-status, /integrations/ePayment/payment-status

#Spring boot actuator endpoints
management.endpoints.web.exposure.include=${ACTUATOR_EXPOSURE_ENDPOINTS:health,info,prometheus}
metrics.collect=${ACTUATOR_METRICS_ENABLED:false}